// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  id       Int        @id @default(autoincrement())
  name     String @default("")
  surname  String @default("")
  pseudo   String @default("Anonym user")
  email    String     @unique
  password String
  privilege  Int    @default(0)
  wallet Int @default(0)
  sessions Sessions[]
  challenges Challenges[]
  accomplishment Accomplishments[]
  goodies Goodies[]
  purchases Purchases[]
}

model Sessions {
  id          Int    @id @default(autoincrement())
  userId      Int
  jwt         String @unique
  userSession Users @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Challenges {
  id Int @id @default(autoincrement())
  name String @default("Unnamed challenge")
  description String @default("")
  reward Int @default(0)
  createdAt DateTime @default(now())
  creatorId Int?
  challengeCreator Users? @relation(fields: [creatorId], references: [id], onDelete: SetNull)
  accomplishements Accomplishments[]
}

model Accomplishments {
  id Int @id @default(autoincrement())
  userId Int?
  challengeId Int?
  createdAt DateTime @default(now())
  proof String @default("")
  validation Int?
  accomplishmentCreator Users? @relation(fields: [userId], references: [id], onDelete: SetNull)
  accomplishmentChallenge Challenges? @relation(fields: [challengeId], references: [id], onDelete: SetNull)
}

model Goodies {
  id Int @id @default(autoincrement())
  name String @default("Unnamed Goodies")
  description String @default("")
  price Int @default(0)
  buyLimit Int @default(1)
  image String @default("")
  createdAt DateTime @default(now())
  creatorId Int?
  goodiesCreator Users? @relation(fields: [creatorId], references: [id], onDelete: SetNull)
  purchases Purchases[]
}

model Purchases {
  id Int @id @default(autoincrement())
  goodiesId Int?
  userId Int?
  createdAt DateTime @default(now())
  purchaseCreator Users? @relation(fields: [userId], references: [id], onDelete: SetNull)
  purchaseGoodies Goodies? @relation(fields: [goodiesId], references: [id], onDelete: SetNull)
}